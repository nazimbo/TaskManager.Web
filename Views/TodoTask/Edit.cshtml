@model TaskManager.Web.Models.Domain.TodoTask

@{
    ViewData["Title"] = "Edit Task";
}

<style>
    .form-card {
        max-width: 800px;
        margin: 0 auto;
    }

    .form-floating > label {
        padding-left: 1rem;
    }
    
    .form-floating > .form-control {
        padding: 1rem;
        height: calc(3.5rem + 2px);
    }
    
    .form-floating > textarea.form-control {
        height: 100px;
    }
    
    .character-counter {
        font-size: 0.75rem;
        color: #6c757d;
        text-align: right;
        margin-top: 0.25rem;
    }

    .form-section {
        position: relative;
        padding: 2rem;
        margin-bottom: 1rem;
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .form-section-header {
        position: absolute;
        top: -1rem;
        left: 1rem;
        background: #0d6efd;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-size: 0.875rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .custom-datepicker::-webkit-calendar-picker-indicator {
        background: transparent;
        bottom: 0;
        color: transparent;
        cursor: pointer;
        height: auto;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        width: auto;
    }

    .datepicker-container {
        position: relative;
    }

    .datepicker-icon {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        pointer-events: none;
    }

    .status-switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

    .status-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .status-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 34px;
    }

    .status-slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        transition: .4s;
        border-radius: 50%;
    }

    input:checked + .status-slider {
        background-color: #198754;
    }

    input:checked + .status-slider:before {
        transform: translateX(26px);
    }

    .task-info {
        font-size: 0.875rem;
        color: #6c757d;
    }
</style>

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="form-card">
                <!-- Header -->
                <div class="text-center mb-4">
                    <h1 class="h3 mb-2">Edit Task</h1>
                    <p class="text-muted">Update your task details below</p>
                </div>

                <form asp-action="Edit" id="editTaskForm">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="CreatedAt" />

                    <!-- Task Status Section -->
                    <div class="form-section mb-4">
                        <div class="form-section-header">
                            <i class="bi bi-check2-circle"></i>Task Status
                        </div>
                        <div class="d-flex align-items-center justify-content-between">
                            <div>
                                <h6 class="mb-1">Mark as Completed</h6>
                                <p class="text-muted mb-0 small">Toggle to mark this task as done</p>
                            </div>
                            <label class="status-switch">
                                <input type="checkbox" asp-for="IsCompleted">
                                <span class="status-slider"></span>
                            </label>
                        </div>
                    </div>

                    <!-- Task Details Section -->
                    <div class="form-section mb-4">
                        <div class="form-section-header">
                            <i class="bi bi-pencil-square"></i>Task Details
                        </div>
                        
                        <!-- Title Field -->
                        <div class="mb-4">
                            <div class="form-floating">
                                <input asp-for="Title" class="form-control" placeholder="Enter task title" maxlength="100" />
                                <label asp-for="Title">
                                    <i class="bi bi-type me-1"></i>Task Title
                                </label>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span asp-validation-for="Title" class="text-danger"></span>
                                <div class="character-counter">
                                    <span id="titleCounter">0</span>/100 characters
                                </div>
                            </div>
                        </div>

                        <!-- Description Field -->
                        <div class="mb-4">
                            <div class="form-floating">
                                <textarea asp-for="Description" class="form-control" 
                                          placeholder="Enter task description" maxlength="500"
                                          style="height: 120px"></textarea>
                                <label asp-for="Description">
                                    <i class="bi bi-card-text me-1"></i>Description
                                </label>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span asp-validation-for="Description" class="text-danger"></span>
                                <div class="character-counter">
                                    <span id="descriptionCounter">0</span>/500 characters
                                </div>
                            </div>
                        </div>

                        <!-- Due Date Field -->
                        <div class="mb-3">
                            <div class="form-floating datepicker-container">
                                <input asp-for="DueDate" class="form-control custom-datepicker" 
                                       type="date" />
                                <label asp-for="DueDate">
                                    <i class="bi bi-calendar-event me-1"></i>Due Date
                                </label>
                                <div class="datepicker-icon">
                                    <i class="bi bi-calendar3"></i>
                                </div>
                            </div>
                            <span asp-validation-for="DueDate" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Task Information Section -->
                    <div class="form-section mb-4">
                        <div class="form-section-header">
                            <i class="bi bi-info-circle"></i>Task Information
                        </div>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="task-info">
                                    <i class="bi bi-clock-history me-2"></i>Created:
                                    <span class="fw-medium">@Model.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy HH:mm")</span>
                                </div>
                            </div>
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <div class="col-md-6">
                                    <div class="task-info">
                                        <i class="bi bi-pencil me-2"></i>Last Updated:
                                        <span class="fw-medium">@Model.UpdatedAt.Value.ToLocalTime().ToString("MMM dd, yyyy HH:mm")</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Form Actions -->
                    <div class="d-flex gap-2 justify-content-center mt-4">
                        <button type="submit" class="btn btn-primary btn-lg px-4">
                            <i class="bi bi-save me-2"></i>Save Changes
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary btn-lg px-4">
                            <i class="bi bi-x-lg me-2"></i>Cancel
                        </a>
                        <button type="button" class="btn btn-outline-danger btn-lg px-4"
                                data-bs-toggle="modal" 
                                data-bs-target="#deleteModal" 
                                data-task-id="@Model.Id"
                                data-task-title="@Model.Title">
                            <i class="bi bi-trash me-2"></i>Delete
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-header border-0">
                <h5 class="modal-title">Delete Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center py-4">
                <i class="bi bi-exclamation-triangle text-warning" style="font-size: 3rem;"></i>
                <h5 class="mt-3">Are you sure?</h5>
                <p class="text-muted mb-0">Do you want to delete task: <strong><span id="taskTitle"></span></strong>?<br>This action cannot be undone.</p>
            </div>
            <div class="modal-footer border-0">
                <form asp-action="Delete" id="deleteForm">
                    <input type="hidden" name="id" id="taskId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-2"></i>Delete Task
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Character counters
            function updateCharacterCounter(input, counter) {
                const currentLength = input.val().length;
                counter.text(currentLength);
                
                if (currentLength >= parseInt(input.attr('maxlength'))) {
                    counter.addClass('text-danger');
                } else {
                    counter.removeClass('text-danger');
                }
            }

            // Title counter
            const titleInput = $('#Title');
            const titleCounter = $('#titleCounter');
            titleInput.on('input', function() {
                updateCharacterCounter(titleInput, titleCounter);
            });
            updateCharacterCounter(titleInput, titleCounter);

            // Description counter
            const descriptionInput = $('#Description');
            const descriptionCounter = $('#descriptionCounter');
            descriptionInput.on('input', function() {
                updateCharacterCounter(descriptionInput, descriptionCounter);
            });
            updateCharacterCounter(descriptionInput, descriptionCounter);

            // Handle delete modal
            $('#deleteModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                const taskId = button.data('task-id');
                const taskTitle = button.data('task-title');
                
                const modal = $(this);
                modal.find('#taskId').val(taskId);
                modal.find('#taskTitle').text(taskTitle);
            });

            // Custom form validation
            const form = $('#editTaskForm');
            form.on('submit', function(e) {
                if (!form[0].checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    // Add shake animation to invalid fields
                    $('.is-invalid').closest('.form-section').addClass('animate__animated animate__shakeX');
                    setTimeout(() => {
                        $('.form-section').removeClass('animate__animated animate__shakeX');
                    }, 1000);
                }
                form.addClass('was-validated');
            });

            // Unsaved changes warning
            let formChanged = false;
            const originalForm = form.serialize();

            form.on('change input', function() {
                formChanged = form.serialize() !== originalForm;
            });

            $(window).on('beforeunload', function(e) {
                if (formChanged) {
                    return 'You have unsaved changes. Are you sure you want to leave?';
                }
            });

            form.on('submit', function() {
                formChanged = false;
            });
        });
    </script>
}